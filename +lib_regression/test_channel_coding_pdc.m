function [result] = test_channel_coding_pdc(config)
    % create transmitter
    tx = lib_tx.tx_t(config);

    % generate random bits
    tb_bits = randi([0 1], tx.derived.N_TB_bits, 1);

    % encode PDC
    [x_PDC, ~] = lib_7_transmission_encoding.PDC_encoding(tb_bits, ...
                                                          tx.derived.G, ...
                                                          config.Z, ...
                                                          config.network_id, ...
                                                          config.PLCF_type, ...
                                                          config.rv, ...
                                                          tx.derived.mcs, ...
                                                          tx.derived.tm_mode.N_SS);

    % simulate without HARQ
    HARQ_buf_ = [];

    % decode PDC
    [tb_bits_recovered, ~, ~] = lib_7_transmission_encoding.PDC_decoding(x_PDC, ...
                                                                         tx.derived.N_TB_bits, ...
                                                                         config.Z, ...
                                                                         config.network_id, ...
                                                                         config.PLCF_type, ...
                                                                         config.rv, ...
                                                                         tx.derived.mcs, ...
                                                                         tx.derived.tm_mode.N_SS, ...
                                                                         HARQ_buf_);

    % analyze result
    result.n_bit_errors = sum(abs(tb_bits - double(tb_bits_recovered)));
    result.BER = result.n_bit_errors / tx.derived.N_TB_bits;
end