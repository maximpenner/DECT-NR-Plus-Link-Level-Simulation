function [samples_antenna_rx_lpf] = lpf(samples_antenna_rx, oversampling)

    assert(oversampling > 1);

    lowpassfilter = designfilt( 'lowpassfir', ...
                                'PassbandFrequency', 0.6 / oversampling, ...
                                'StopbandFrequency',0.8 / oversampling, ...
                                'PassbandRipple', 10, ...
                                'StopbandAttenuation', 30, ...
                                'SampleRate', 1, ...
                                'DesignMethod', 'kaiserwin', ...
                                'MinOrder', 'even');
    
    assert(mod(numel(lowpassfilter.Coefficients), 2) == 1, 'fractional LPF delay');
    
    samples_antenna_rx_lpf = filter(lowpassfilter, samples_antenna_rx);
    
    % compensate deterministic filter delay prior to synchronization
    lowpassfilter_delay = (numel(lowpassfilter.Coefficients)-1)/2;
    samples_antenna_rx_lpf(1:end-lowpassfilter_delay) = samples_antenna_rx_lpf(lowpassfilter_delay+1:end);
end
